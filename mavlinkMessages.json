{
  "mavMessages":
  [
    {
      "name": "NAV_WAYPOINT",
      "value": 16,
      "desc": "Navigate to waypoint.",
      "param1": "@param1 Hold[s] (min: 0) Hold time. (ignored by fixed wing, time to stay at waypoint for rotary wing)",
      "param2": "@param2 Accept Radius[m] (min: 0) Acceptance radius (if the sphere with this radius is hit, the waypoint counts as reached)",
      "param3": "@param3 Pass Radius[m] 0 to pass through the WP, if > 0 radius to pass by WP. Positive value for clockwise orbit, negative value for counter-clockwise orbit. Allows trajectory control.",
      "param4": "@param4 Yaw[deg] Desired yaw angle at waypoint (rotary wing). NaN to use the current system yaw heading mode (e.g. yaw towards next waypoint, yaw to home, etc.).",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "NAV_LOITER_UNLIM",
      "value": 17,
      "desc": "Loiter around this waypoint an unlimited amount of time",
      "param1": "@param1 Empty",
      "param2": "@param2 Empty",
      "param3": "@param3 Radius[m] Loiter radius around waypoint for forward-only moving vehicles (not multicopters). If positive loiter clockwise, else counter-clockwise",
      "param4": "@param4 Yaw[deg] Desired yaw angle. NaN to use the current system yaw heading mode (e.g. yaw towards next waypoint, yaw to home, etc.).",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "NAV_LOITER_TURNS",
      "value": 18,
      "desc": "Loiter around this waypoint for X turns",
      "param1": "@param1 Turns (min: 0) Number of turns.",
      "param2": "@param2 Heading Required (min: 0, max: 1, increment: 1) Leave loiter circle only once heading towards the next waypoint (0 = False)",
      "param3": "@param3 Radius[m] Loiter radius around waypoint for forward-only moving vehicles (not multicopters). If positive loiter clockwise, else counter-clockwise",
      "param4": "@param4 Xtrack Location Loiter circle exit location and/or path to next waypoint (\"xtrack\") for forward-only moving vehicles (not multicopters). 0 for the vehicle to converge towards the center xtrack when it leaves the loiter (the line between the centers of the current and next waypoint), 1 to converge to the direct line between the location that the vehicle exits the loiter radius and the next waypoint. Otherwise the angle (in degrees) between the tangent of the loiter circle and the center xtrack at which the vehicle must leave the loiter (and converge to the center xtrack). NaN to use the current system default xtrack behaviour.",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "NAV_LOITER_TIME",
      "value": 19,
      "desc": "Loiter at the specified latitude, longitude and altitude for a certain amount of time. Multicopter vehicles stop at the point (within a vehicle-specific acceptance radius). Forward-only moving vehicles (e.g. fixed-wing) circle the point with the specified radius/direction. If the Heading required parameter (2) is non-zero forward moving aircraft will only leave the loiter circle once heading towards the next waypoint.",
      "param1": "@param1 Time[s] (min: 0) Loiter time (only starts once Lat, Lon and Alt is reached).",
      "param2": "@param2 Heading Required (min: 0, max: 1, increment: 1) Leave loiter circle only once heading towards the next waypoint (0 = False)",
      "param3": "@param3 Radius[m] Loiter radius around waypoint for forward-only moving vehicles (not multicopters). If positive loiter clockwise, else counter-clockwise",
      "param4": "@param4 Xtrack Location Loiter circle exit location and/or path to next waypoint (\"xtrack\") for forward-only moving vehicles (not multicopters). 0 for the vehicle to converge towards the center xtrack when it leaves the loiter (the line between the centers of the current and next waypoint), 1 to converge to the direct line between the location that the vehicle exits the loiter radius and the next waypoint. Otherwise the angle (in degrees) between the tangent of the loiter circle and the center xtrack at which the vehicle must leave the loiter (and converge to the center xtrack). NaN to use the current system default xtrack behaviour.",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "NAV_RETURN_TO_LAUNCH",
      "value": 20,
      "desc": "Return to launch location",
      "param1": "@param1 Empty",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "NAV_RETURN_TO_LAUNCH",
      "value": 20,
      "desc": "Land at location.",
      "param1": "@param1 Abort Alt[m] Minimum target altitude if landing is aborted (0 = undefined/use system default).",
      "param2": "@param2 Land Mode Precision land mode.",
      "param3": "@param3 Empty",
      "param4": "@param4 Yaw Angle[deg] Desired yaw angle. NaN to use the current system yaw heading mode (e.g. yaw towards next waypoint, yaw to home, etc.).",
      "param5": "@param5 Latitude Latitude.",
      "param6": "@param6 Longitude Longitude.",
      "param7": "@param7 Altitude[m] Landing altitude (ground level in current frame)."
    },
    {
      "name": "NAV_LAND",
      "value": 21,
      "desc": "Land at location.",
      "param1": "@param1 Abort Alt[m] Minimum target altitude if landing is aborted (0 = undefined/use system default).",
      "param2": "@param2 Land Mode Precision land mode.",
      "param3": "@param3 Empty",
      "param4": "@param4 Yaw Angle[deg] Desired yaw angle. NaN to use the current system yaw heading mode (e.g. yaw towards next waypoint, yaw to home, etc.).",
      "param5": "@param5 Latitude Latitude.",
      "param6": "@param6 Longitude Longitude.",
      "param7": "@param7 Altitude[m] Landing altitude (ground level in current frame)."
    },
    {
      "name": "NAV_TAKEOFF",
      "value": 22,
      "desc": "Takeoff from ground / hand. Vehicles that support multiple takeoff modes (e.g. VTOL quadplane) should take off using the currently configured mode.",
      "param1": "@param1 Pitch[deg] Minimum pitch (if airspeed sensor present), desired pitch without sensor",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Yaw[deg] Yaw angle (if magnetometer present), ignored without magnetometer. NaN to use the current system yaw heading mode (e.g. yaw towards next waypoint, yaw to home, etc.).",
      "param5": "@param5 Latitude Latitude.",
      "param6": "@param6 Longitude Longitude.",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "NAV_LAND_LOCAL",
      "value": 23,
      "desc": "Land at local position (local frame only)",
      "param1": "@param1 Target (min: 0, increment: 1) Landing target number (if available)",
      "param2": "@param2 Offset[m] (min: 0) Maximum accepted offset from desired landing position - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land",
      "param3": "@param3 Descend Rate[m/s] Landing descend rate",
      "param4": "@param4 Yaw[rad] Desired yaw angle",
      "param5": "@param5 Y Position[m] Y-axis position.",
      "param6": "@param6 X Position[m] X-axis position.",
      "param7": "@param7 Z Position[m] Z-axis / ground level position"
    },
    {
      "name": "NAV_TAKEOFF_LOCAL",
      "value": 24,
      "desc": "Takeoff from local position (local frame only)",
      "param1": "@param1 Pitch[rad] Minimum pitch (if airspeed sensor present), desired pitch without sensor",
      "param2": "@param2 Empty",
      "param3": "@param3 Ascend Rate[m/s] Takeoff ascend rate",
      "param4": "@param4 Yaw[rad] Yaw angle (if magnetometer or another yaw estimation source present), ignored without one of these",
      "param5": "@param5 Y Position[m] Y-axis position.",
      "param6": "@param6 X Position[m] X-axis position.",
      "param7": "@param7 Z Position[m] Z-axis position."
    },
    {
      "name": "NAV_FOLLOW",
      "value": 25,
      "desc": "Vehicle following, i.e. this waypoint represents the position of a moving vehicle",
      "param1": "@param1 Following (increment: 1) Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation",
      "param2": "@param2 Ground Speed[m/s] Ground speed of vehicle to be followed",
      "param3": "@param3 Radius[m] Radius around waypoint. If positive loiter clockwise, else counter-clockwise",
      "param4": "@param4 Yaw[deg] Desired yaw angle.",
      "param5": "@param5 Latitude Latitude.",
      "param6": "@param6 Longitude Longitude.",
      "param7": "@param7 Altitude[m] Altitude."
    },
    {
      "name": "NAV_CONTINUE_AND_CHANGE_ALT",
      "value": 30,
      "desc": "Continue on the current course and climb/descend to specified altitude. When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached.",
      "param1": "@param1 Action (min: 0, max: 2, increment: 1) Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude.",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Altitude[m] Desired altitude"
    },
    {
      "name": "NAV_LOITER_TO_ALT",
      "value": 31,
      "desc": "Begin loiter at the specified Latitude and Longitude. If Lat=Lon=0, then loiter at the current position. Don't consider the navigation command complete (don't leave loiter) until the altitude has been reached. Additionally, if the Heading Required parameter is non-zero the aircraft will not leave the loiter until heading toward the next waypoint.",
      "param1": "@param1 Heading Required (min: 0, max: 1, increment: 1) Leave loiter circle only once heading towards the next waypoint (0 = False)",
      "param2": "@param2 Radius[m] Loiter radius around waypoint for forward-only moving vehicles (not multicopters). If positive loiter clockwise, negative counter-clockwise, 0 means no change to standard loiter.",
      "param3": "@param3 Empty",
      "param4": "@param4 Xtrack Location (min: 0, max: 1, increment: 1) Loiter circle exit location and/or path to next waypoint (\"xtrack\") for forward-only moving vehicles (not multicopters). 0 for the vehicle to converge towards the center xtrack when it leaves the loiter (the line between the centers of the current and next waypoint), 1 to converge to the direct line between the location that the vehicle exits the loiter radius and the next waypoint. Otherwise the angle (in degrees) between the tangent of the loiter circle and the center xtrack at which the vehicle must leave the loiter (and converge to the center xtrack). NaN to use the current system default xtrack behaviour.",
      "param5": "@param5 Latitude Latitude.",
      "param6": "@param6 Longitude Longitude.",
      "param7": "@param7 Altitude[m] Altitude."
    },
    {
      "name": "NAV_LOITER_TO_ALT",
      "value": 31,
      "desc": "Begin following a target.",
      "param1": "@param1 System ID (min: 0, max: 255, increment: 1) System ID (of the FOLLOW_TARGET beacon). Send 0 to disable follow-me and return to the default position hold mode.",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Altitude Mode (min: 0, max: 2, increment: 1) Altitude mode: 0: Keep current altitude, 1: keep altitude difference to target, 2: go to a fixed altitude above home.",
      "param5": "@param5 Altitude[m] Altitude above home. (used if mode=2).",
      "param6": "@param6 Reserved.",
      "param7": "@param7 Time to Land[s] (min: 0) Time to land in which the MAV should go to the default position hold mode after a message RX timeout."
    },
    {
      "name": "DO_FOLLOW",
      "value": 32,
      "desc": "Begin following a target.",
      "param1": "@param1 System ID (min: 0, max: 255, increment: 1) System ID (of the FOLLOW_TARGET beacon). Send 0 to disable follow-me and return to the default position hold mode.",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Altitude Mode (min: 0, max: 2, increment: 1) Altitude mode: 0: Keep current altitude, 1: keep altitude difference to target, 2: go to a fixed altitude above home.",
      "param5": "@param5 Altitude[m] Altitude above home. (used if mode=2).",
      "param6": "@param6 Reserved.",
      "param7": "@param7 Time to Land[s] (min: 0) Time to land in which the MAV should go to the default position hold mode after a message RX timeout."
    },
    {
      "name": "DO_FOLLOW_REPOSITION",
      "value": 33,
      "desc": "Begin following a target.",
      "param1": "@param1 Camera Q1 Camera q1 (where 0 is on the ray from the camera to the tracking device)",
      "param2": "@param2 Camera Q2 Camera q2",
      "param3": "@param3 Camera Q3 Camera q3",
      "param4": "@param4 Camera Q4 Camera q4.",
      "param5": "@param5 Altitude Offset[m] altitude offset from target",
      "param6": "@param6 X Offset[m] X offset from target",
      "param7": "@param7 Y Offset[m] Y offset from target"
    },
    {
      "name": "DO_ORBIT",
      "value": 34,
      "desc": "Start orbiting on the circumference of a circle defined by the parameters. Setting values to NaN/INT32_MAX (as appropriate) results in using defaults.",
      "param1": "@param1 Radius[m] Radius of the circle. Positive: orbit clockwise. Negative: orbit counter-clockwise. NaN: Use vehicle default radius, or current radius if already orbiting.",
      "param2": "@param2 Velocity[m/s] Tangential Velocity. NaN: Use vehicle default velocity, or current velocity if already orbiting.",
      "param3": "@param3 Yaw Behavior Yaw behavior of the vehicle.",
      "param4": "@param4 Orbits[rad] (min: 0) Orbit around the centre point for this many radians (i.e. for a three-quarter orbit set 270*Pi/180). 0: Orbit forever. NaN: Use vehicle default, or current value if already orbiting.",
      "param5": "@param5 Latitude/X Center point latitude (if no MAV_FRAME specified) / X coordinate according to MAV_FRAME. INT32_MAX (or NaN if sent in COMMAND_LONG): Use current vehicle position, or current center if already orbiting.",
      "param6": "@param6 Longitude/Y Center point longitude (if no MAV_FRAME specified) / Y coordinate according to MAV_FRAME. INT32_MAX (or NaN if sent in COMMAND_LONG): Use current vehicle position, or current center if already orbiting.",
      "param7": "@param7 Altitude/Z Center point altitude (MSL) (if no MAV_FRAME specified) / Z coordinate according to MAV_FRAME. NaN: Use current vehicle altitude."
    },
    {
      "name": "NAV_ROI",
      "value": 80,
      "desc": "Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras.",
      "param1": "@param1 ROI Mode Region of interest mode.",
      "param2": "@param2 WP Index (min: 0, increment: 1) Waypoint index/ target ID. (see MAV_ROI enum)",
      "param3": "@param3 ROI Index (min: 0, increment: 1) ROI index (allows a vehicle to manage multiple ROI's)",
      "param4": "@param4 Empty",
      "param5": "@param5 X x the location of the fixed ROI (see MAV_FRAME)",
      "param6": "@param6 Y y",
      "param7": "@param7 Z z"
    },
    {
      "name": "NAV_PATHPLANNING",
      "value": 81,
      "desc": "Control autonomous path planning on the MAV.",
      "param1": "@param1 Local Ctrl (min: 0, max: 2, increment: 1) 0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning.",
      "param2": "@param2 Global Ctrl (min: 0, max: 3, increment: 1) 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid",
      "param3": "@param3 Empty",
      "param4": "@param4 Yaw[deg] Yaw angle at goal",
      "param5": "@param5 Latitude/X Latitude/X of goal",
      "param6": "@param6 Longitude/Y Longitude/Y of goal",
      "param7": "@param7 Altitude/Z Altitude/Z of goal"
    },
    {
      "name": "NAV_SPLINE_WAYPOINT",
      "value": 82,
      "desc": "Navigate to waypoint using a spline path.",
      "param1": "@param1 Hold[s] (min: 0) Hold time. (ignored by fixed wing, time to stay at waypoint for rotary wing).",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Latitude/X Latitude/X of goal",
      "param6": "@param6 Longitude/Y Longitude/Y of goal",
      "param7": "@param7 Altitude/Z Altitude/Z of goal"
    },
    {
      "name": "NAV_VTOL_TAKEOFF",
      "value": 84,
      "desc": "Takeoff from ground using VTOL mode, and transition to forward flight with specified heading. The command should be ignored by vehicles that dont support both VTOL and fixed-wing flight (multicopters, boats,etc.).",
      "param1": "@param1 Empty",
      "param2": "@param2 Transition Heading Front transition heading",
      "param3": "@param3 Empty",
      "param4": "@param4 Yaw Angle[deg] Yaw angle. NaN to use the current system yaw heading mode (e.g. yaw towards next waypoint, yaw to home, etc.)",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "NAV_VTOL_LAND",
      "value": 85,
      "desc": "Land using VTOL mode.",
      "param1": "@param1 Land Options Landing behaviour.",
      "param2": "@param2 Empty",
      "param3": "@param3 Approach Altitude[m] Approach altitude (with the same reference as the Altitude field). NaN if unspecified.",
      "param4": "@param4 Yaw[deg] Yaw angle. NaN to use the current system yaw heading mode (e.g. yaw towards next waypoint, yaw to home, etc.).",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Ground Altitude[m] Altitude (ground level) relative to the current coordinate frame. NaN to use system default landing altitude (ignore value)."
    },
    {
      "name": "NAV_GUIDED_ENABLE",
      "value": 92,
      "desc": "Hand control over to an external controller.",
      "param1": "@param1 Enable (min: 0, max: 1, increment: 1) On / Off (> 0.5f on).",
      "param2": "@param2 Empty.",
      "param3": "@param3 Empty.",
      "param4": "@param4 Empty.",
      "param5": "@param5 Empty.",
      "param6": "@param6 Empty.",
      "param7": "@param7 Empty."
    },
    {
      "name": "NAV_DELAY",
      "value": 93,
      "desc": "Delay the next navigation command a number of seconds or until a specified time.",
      "param1": "@param1 Delay[s] (min: -1, increment: 1) Delay (-1 to enable time-of-day fields)",
      "param2": "@param2 Hour (min: -1, max: 23, increment: 1) hour (24h format, UTC, -1 to ignore)",
      "param3": "@param3 Minute (min: -1, max: 59, increment: 1) minute (24h format, UTC, -1 to ignore)",
      "param4": "@param4 Second (min: -1, max: 59, increment: 1) second (24h format, UTC, -1 to ignore)",
      "param5": "@param5 Empty.",
      "param6": "@param6 Empty.",
      "param7": "@param7 Empty."
    },
    {
      "name": "NAV_PAYLOAD_PLACE",
      "value": 94,
      "desc": "Descend and place payload. Vehicle moves to specified location, descends until it detects a hanging payload has reached the ground, and then releases the payload. If ground is not detected before the reaching the maximum descent value (param1), the command will complete without releasing the payload.",
      "param1": "@param1 Max Descent[m] (min: 0) Maximum distance to descend.",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "NAV_LAST",
      "value": 95,
      "desc": "NOP - This command is only used to mark the upper limit of the NAV/ACTION commands in the enumeration",
      "param1": "@param1 Empty",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "CONDITION_DELAY",
      "value": 112,
      "desc": "Delay mission state machine.",
      "param1": "@param1 Delay[s] (min: 0) Delay",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "CONDITION_CHANGE_ALT",
      "value": 113,
      "desc": "Ascend/descend to target altitude at specified rate. Delay mission state machine until desired altitude reached.",
      "param1": "@param1 Rate[m/s] Descent / Ascend rate.",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Altitude[m] Target Altitude"
    },
    {
      "name": "CONDITION_DISTANCE",
      "value": 114,
      "desc": "Delay mission state machine until within desired distance of next NAV point.",
      "param1": "@param1 Distance[m] (min: 0) Distance.",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "CONDITION_YAW",
      "value": 115,
      "desc": "Reach a certain target angle.",
      "param1": "@param1 Angle[deg] target angle, 0 is north",
      "param2": "@param2 Angular Speed[deg/s] angular speed",
      "param3": "@param3 Direction (min: -1, max: 1, increment: 2) direction: -1: counter clockwise, 1: clockwise",
      "param4": "@param4 Relative (min: 0, max: 1, increment: 1) 0: absolute angle, 1: relative offset",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "CONDITION_LAST",
      "value": 159,
      "desc": "NOP - This command is only used to mark the upper limit of the CONDITION commands in the enumeration.",
      "param1": "@param1 Empty",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_MODE",
      "value": 176,
      "desc": "Set system mode.",
      "param1": "@param1 Mode Mode",
      "param2": "@param2 Custom Mode Custom mode - this is system specific, please refer to the individual autopilot specifications for details.",
      "param3": "@param3 Custom Submode Custom sub mode - this is system specific, please refer to the individual autopilot specifications for details.",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_JUMP",
      "value": 177,
      "desc": "Jump to the desired command in the mission list. Repeat this action only the specified number of times.",
      "param1": "@param1 Number (min: 0, increment: 1) Sequence number",
      "param2": "@param2 Repeat (min: 0, increment: 1) Repeat count.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_CHANGE_SPEED",
      "value": 178,
      "desc": "Change speed and/or throttle set points. The value persists until it is overridden or there is a mode change.",
      "param1": "@param1 Speed Type (min: 0, max: 3, increment: 1) Speed type (0=Airspeed, 1=Ground Speed, 2=Climb Speed, 3=Descent Speed)",
      "param2": "@param2 Speed[m/s] (min: -2) Speed (-1 indicates no change, -2 indicates return to default vehicle speed)",
      "param3": "@param3 Throttle[%] (min: -2) Throttle (-1 indicates no change, -2 indicates return to default vehicle throttle value)",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_HOME",
      "value": 179,
      "desc": "Sets the home position to either to the current position or a specified position. The home position is the default position that the system will return to and land on. The position is set automatically by the system during the takeoff (and may also be set using this command). Note: the current home position may be emitted in a HOME_POSITION message on request (using MAV_CMD_REQUEST_MESSAGE with param1=242).",
      "param1": "@param1 Use Current (min: 0, max: 1, increment: 1) Use current (1=use current location, 0=use specified location)",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Yaw[deg] Yaw angle. NaN to use default heading",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "DO_SET_PARAMETER",
      "value": 180,
      "desc": "Set a system parameter. Caution! Use of this command requires knowledge of the numeric enumeration value of the parameter.",
      "param1": "@param1 Number (min: 0, increment: 1) Parameter number",
      "param2": "@param2 Value Parameter value",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_RELAY",
      "value": 181,
      "desc": "Set a relay to a condition.",
      "param1": "@param1 Instance (min: 0, increment: 1) Relay instance number",
      "param2": "@param2 Setting (min: 0, increment: 1) Setting. (1=on, 0=off, others possible depending on system hardware)",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_REPEAT_RELAY",
      "value": 182,
      "desc": "Cycle a relay on and off for a desired number of cycles with a desired period.",
      "param1": "@param1 Instance (min: 0, increment: 1) Relay instance number",
      "param2": "@param2 Count (min: 1, increment: 1) Cycle count",
      "param3": "@param3 Time[s] (min: 0) Cycle time",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_SERVO",
      "value": 183,
      "desc": "Set a servo to a desired PWM value.",
      "param1": "@param1 Instance (min: 0, increment: 1) Servo instance number",
      "param2": "@param2 PWM[us] (min: 0, increment: 1) Pulse Width Modulation",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_REPEAT_SERVO",
      "value": 184,
      "desc": "Cycle a between its nominal setting and a desired PWM for a desired number of cycles with a desired period.",
      "param1": "@param1 Instance (min: 0, increment: 1) Servo instance number",
      "param2": "@param2 PWM[us] (min: 0, increment: 1) Pulse Width Modulation",
      "param3": "@param3 Count (min: 1, increment: 1) Cycle count",
      "param4": "@param4 Time[s] (min: 0) Cycle time",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_FLIGHTTERMINATION",
      "value": 185,
      "desc": "Terminate flight immediately. Flight termination immediately and irreversably terminates the current flight, returning the vehicle to ground. The vehicle will ignore RC or other input until it has been power-cycled. Termination may trigger safety measures, including: disabling motors and deployment of parachute on multicopters, and setting flight surfaces to initiate a landing pattern on fixed-wing). On multicopters without a parachute it may trigger a crash landing. Support for this command can be tested using the protocol bit: MAV_PROTOCOL_CAPABILITY_FLIGHT_TERMINATION. Support for this command can also be tested by sending the command with param1=0 (< 0.5); the ACK should be either MAV_RESULT_FAILED or MAV_RESULT_UNSUPPORTED.",
      "param1": "@param1 Terminate (min: 0, max: 1, increment: 1) Flight termination activated if > 0.5. Otherwise not activated and ACK with MAV_RESULT_FAILED",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_CHANGE_ALTITUDE",
      "value": 186,
      "desc": "Change altitude set point.",
      "param1": "@param1 Altitude[m] Altitude.",
      "param2": "@param2 Frame Frame of new altitude.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_ACTUATOR",
      "value": 187,
      "desc": "Sets actuators (e.g. servos) to a desired value. The actuator numbers are mapped to specific outputs (e.g. on any MAIN or AUX PWM or UAVCAN) using a flight-stack specific mechanism (i.e. a parameter).",
      "param1": "@param1 Actuator 1 (min: -1, max: 1) Actuator 1 value, scaled from [-1 to 1]. NaN to ignore.",
      "param2": "@param2 Actuator 2 (min: -1, max: 1) Actuator 2 value, scaled from [-1 to 1]. NaN to ignore.",
      "param3": "@param3 Actuator 3 (min: -1, max: 1) Actuator 3 value, scaled from [-1 to 1]. NaN to ignore.",
      "param4": "@param4 Actuator 4 (min: -1, max: 1) Actuator 4 value, scaled from [-1 to 1]. NaN to ignore.",
      "param5": "@param5 Actuator 5 (min: -1, max: 1) Actuator 5 value, scaled from [-1 to 1]. NaN to ignore.",
      "param6": "@param6 Actuator 6 (min: -1, max: 1) Actuator 6 value, scaled from [-1 to 1]. NaN to ignore.",
      "param7": "@param7 Index (min: 0, increment: 1) Index of actuator set (i.e if set to 1, Actuator 1 becomes Actuator 7)"
    },
    {
      "name": "DO_LAND_START",
      "value": 189,
      "desc": "Mission command to perform a landing. This is used as a marker in a mission to tell the autopilot where a sequence of mission items that represents a landing starts. It may also be sent via a COMMAND_LONG to trigger a landing, in which case the nearest (geographically) landing sequence in the mission will be used. The Latitude/Longitude/Altitude is optional, and may be set to 0 if not needed. If specified then it will be used to help find the closest landing sequence.",
      "param1": "@param1 Empty",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "DO_RALLY_LAND",
      "value": 190,
      "desc": "Mission command to perform a landing from a rally point.",
      "param1": "@param1 Altitude[m] Break altitude",
      "param2": "@param2 Speed[m/s] Landing speed",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_GO_AROUND",
      "value": 191,
      "desc": "Mission command to safely abort an autonomous landing.",
      "param1": "@param1 Altitude[m] Altitude",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_REPOSITION",
      "value": 192,
      "desc": "Reposition the vehicle to a specific WGS84 global position.",
      "param1": "@param1 Speed[m/s] (min: -1) Ground speed, less than 0 (-1) for default",
      "param2": "@param2 Bitmask Bitmask of option flags.",
      "param3": "@param3 Radius[m] Loiter radius for planes. Positive values only, direction is controlled by Yaw value. A value of zero or NaN is ignored.",
      "param4": "@param4 Yaw[deg] Yaw heading. NaN to use the current system yaw heading mode (e.g. yaw towards next waypoint, yaw to home, etc.). For planes indicates loiter direction (0: clockwise, 1: counter clockwise)",
      "param5": "@param5 Latitude Latitude",
      "param6": "@param6 Longitude Longitude",
      "param7": "@param7 Altitude[m] Altitude"
    },
    {
      "name": "DO_PAUSE_CONTINUE",
      "value": 193,
      "desc": "If in a GPS controlled position mode, hold the current position or continue.",
      "param1": "@param1 Continue (min: 0, max: 1, increment: 1) 0: Pause current mission or reposition command, hold current position. 1: Continue mission. A VTOL capable vehicle should enter hover mode (multicopter and VTOL planes). A plane should loiter with the default loiter radius.",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "DO_SET_REVERSE",
      "value": 194,
      "desc": "Set moving direction to forward or reverse.",
      "param1": "@param1 Reverse (min: 0, max: 1, increment: 1) Direction (0=Forward, 1=Reverse)",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_ROI_LOCATION",
      "value": 195,
      "desc": "Sets the region of interest (ROI) to a location. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras. This command can be sent to a gimbal manager but not to a gimbal device. A gimbal is not to react to this message.",
      "param1": "@param1 Gimbal device ID Component ID of gimbal device to address (or 1-6 for non-MAVLink gimbal), 0 for all gimbal device components. Send command multiple times for more than one gimbal (but not all gimbals)",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Latitude[degE7] Latitude of ROI location",
      "param6": "@param6 Longitude[degE7] Longitude of ROI location",
      "param7": "@param7 Altitude[m] Altitude of ROI location"
    },
    {
      "name": "DO_SET_ROI_WPNEXT_OFFSET",
      "value": 196,
      "desc": "Sets the region of interest (ROI) to be toward next waypoint, with optional pitch/roll/yaw offset. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras. This command can be sent to a gimbal manager but not to a gimbal device. A gimbal device is not to react to this message.",
      "param1": "@param1 Gimbal device ID Component ID of gimbal device to address (or 1-6 for non-MAVLink gimbal), 0 for all gimbal device components. Send command multiple times for more than one gimbal (but not all gimbals).",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Pitch Offset Pitch offset from next waypoint, positive pitching up",
      "param6": "@param6 Roll Offset Roll offset from next waypoint, positive rolling to the right",
      "param7": "@param7 Yaw Offset Yaw offset from next waypoint, positive yawing to the right"
    },
    {
      "name": "DO_SET_ROI_NONE",
      "value": 197,
      "desc": "Cancels any previous ROI command returning the vehicle/sensors to default flight characteristics. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras. This command can be sent to a gimbal manager but not to a gimbal device. A gimbal device is not to react to this message. After this command the gimbal manager should go back to manual input if available, and otherwise assume a neutral position.",
      "param1": "@param1 Gimbal device ID Component ID of gimbal device to address (or 1-6 for non-MAVLink gimbal), 0 for all gimbal device components. Send command multiple times for more than one gimbal (but not all gimbals).",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_ROI_SYSID",
      "value": 198,
      "desc": "Mount tracks system with specified system ID. Determination of target vehicle position may be done GLOBAL_POSITION_INT or any other means. This command can be sent to a gimbal manager but not to a gimbal device. A gimbal device is not to react to this message.",
      "param1": "@param1 System ID (min: 1, max: 255, increment: 1) System ID",
      "param2": "@param2 Gimbal device ID Component ID of gimbal device to address (or 1-6 for non-MAVLink gimbal), 0 for all gimbal device components. Send command multiple times for more than one gimbal (but not all gimbals).",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_CONTROL_VIDEO",
      "value": 200,
      "desc": "Control onboard camera system.",
      "param1": "@param1 ID (min: -1, increment: 1) Camera ID (-1 for all)",
      "param2": "@param2 Transmission (min: 0, max: 2, increment: 1) Transmission: 0: disabled, 1: enabled compressed, 2: enabled raw",
      "param3": "@param3 Interval[s] (min: 0) Transmission mode: 0: video stream, >0: single images every n seconds",
      "param4": "@param4 Recording (min: 0, max: 2, increment: 1) Recording: 0: disabled, 1: enabled compressed, 2: enabled raw",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_ROI",
      "value": 201,
      "desc": "Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras.",
      "param1": "@param1 ROI Mode Region of interest mode.",
      "param2": "@param2 WP Index (min: 0, increment: 1) Waypoint index/ target ID (depends on param 1).",
      "param3": "@param3 ROI Index (min: 0, increment: 1) Region of interest index. (allows a vehicle to manage multiple ROI's)",
      "param4": "@param4 Empty",
      "param5": "@param5 MAV_ROI_WPNEXT: pitch offset from next waypoint, MAV_ROI_LOCATION: latitude",
      "param6": "@param6 MAV_ROI_WPNEXT: roll offset from next waypoint, MAV_ROI_LOCATION: longitude",
      "param7": "@param7 MAV_ROI_WPNEXT: yaw offset from next waypoint, MAV_ROI_LOCATION: altitude"
    },
    {
      "name": "DO_DIGICAM_CONFIGURE",
      "value": 202,
      "desc": "Configure digital camera. This is a fallback message for systems that have not yet implemented PARAM_EXT_XXX messages and camera definition files (see https://mavlink.io/en/services/camera_def.html ).",
      "param1": "@param1 Mode (min: 0, increment: 1) Modes: P, TV, AV, M, Etc.",
      "param2": "@param2 Shutter Speed (min: 0, increment: 1) Shutter speed: Divisor number for one second.",
      "param3": "@param3 Aperture (min: 0) Aperture: F stop number.",
      "param4": "@param4 ISO (min: 0, increment: 1) ISO number e.g. 80, 100, 200, Etc.",
      "param5": "@param5 Exposure Exposure type enumerator.",
      "param6": "@param6 Command Identity Command Identity.",
      "param7": "@param7 Engine Cut-off[ds] (min: 0, increment: 1) Main engine cut-off time before camera trigger. (0 means no cut-off)"
    },
    {
      "name": "DO_DIGICAM_CONTROL",
      "value": 203,
      "desc": "Control digital camera. This is a fallback message for systems that have not yet implemented PARAM_EXT_XXX messages and camera definition files (see https://mavlink.io/en/services/camera_def.html ).",
      "param1": "@param1 Session Control Session control e.g. show/hide lens",
      "param2": "@param2 Zoom Absolute Zoom's absolute position",
      "param3": "@param3 Zoom Relative Zooming step value to offset zoom from the current position",
      "param4": "@param4 Focus Focus Locking, Unlocking or Re-locking",
      "param5": "@param5 Shoot Command Shooting Command",
      "param6": "@param6 Command Identity Command Identity",
      "param7": "@param7 Shot ID Test shot identifier. If set to 1, image will only be captured, but not counted towards internal frame count."
    },
    {
      "name": "DO_MOUNT_CONFIGURE",
      "value": 204,
      "desc": "Mission command to configure a camera or antenna mount.",
      "param1": "@param1 Mode Mount operation mode",
      "param2": "@param2 Stabilize Roll (min: 0, max: 1, increment: 1) stabilize roll? (1 = yes, 0 = no)",
      "param3": "@param3 Stabilize Pitch (min: 0, max: 1, increment: 1) stabilize pitch? (1 = yes, 0 = no)",
      "param4": "@param4 Stabilize Yaw (min: 0, max: 1, increment: 1) stabilize yaw? (1 = yes, 0 = no)",
      "param5": "@param5 Roll Input Mode roll input (0 = angle body frame, 1 = angular rate, 2 = angle absolute frame)",
      "param6": "@param6 Pitch Input Mode pitch input (0 = angle body frame, 1 = angular rate, 2 = angle absolute frame)",
      "param7": "@param7 Yaw Input Mode yaw input (0 = angle body frame, 1 = angular rate, 2 = angle absolute frame)"
    },
    {
      "name": "DO_MOUNT_CONTROL",
      "value": 205,
      "desc": "Mission command to control a camera or antenna mount.",
      "param1": "@param1 Pitch pitch depending on mount mode (degrees or degrees/second depending on pitch input).",
      "param2": "@param2 Roll roll depending on mount mode (degrees or degrees/second depending on roll input).",
      "param3": "@param3 Yaw yaw depending on mount mode (degrees or degrees/second depending on yaw input).",
      "param4": "@param4 Altitude[m] altitude depending on mount mode.",
      "param5": "@param5 Latitude latitude, set if appropriate mount mode.",
      "param6": "@param6 Longitude longitude, set if appropriate mount mode.",
      "param7": "@param7 Mode Mount mode."
    },
    {
      "name": "DO_SET_CAM_TRIGG_DIST",
      "value": 206,
      "desc": "Mission command to set camera trigger distance for this flight. The camera is triggered each time this distance is exceeded. This command can also be used to set the shutter integration time for the camera.",
      "param1": "@param1 Distance[m] (min: 0) Camera trigger distance. 0 to stop triggering.",
      "param2": "@param2 Shutter[ms] (min: -1, increment: 1) Camera shutter integration time. -1 or 0 to ignore",
      "param3": "@param3 Trigger (min: 0, max: 1, increment: 1) Trigger camera once immediately. (0 = no trigger, 1 = trigger)",
      "param4": "@param4 Empty.",
      "param5": "@param5 Empty.",
      "param6": "@param6 Empty.",
      "param7": "@param7 Empty."
    },
    {
      "name": "DO_FENCE_ENABLE",
      "value": 207,
      "desc": "Mission command to enable the geofence",
      "param1": "@param1 Enable (min: 0, max: 2, increment: 1) enable? (0=disable, 1=enable, 2=disable_floor_only).",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_PARACHUTE",
      "value": 208,
      "desc": "Mission item/command to release a parachute or enable/disable auto release.",
      "param1": "@param1 Action Action.",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_MOTOR_TEST",
      "value": 209,
      "desc": "Command to perform motor test.",
      "param1": "@param1 Instance (min: 1, increment: 1) Motor instance number (from 1 to max number of motors on the vehicle).",
      "param2": "@param2 Throttle Type Throttle type (whether the Throttle Value in param3 is a percentage, PWM value, etc.)",
      "param3": "@param3 Throttle Throttle value.",
      "param4": "@param4 Timeout[s] (min: 0) Timeout between tests that are run in sequence.",
      "param5": "@param5 Motor Count (min: 0, increment: 1) Motor count. Number of motors to test in sequence: 0/1=one motor, 2= two motors, etc. The Timeout (param4) is used between tests.",
      "param6": "@param6 Test Order Motor test order.",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_INVERTED_FLIGHT",
      "value": 210,
      "desc": "Change to/from inverted flight.",
      "param1": "@param1 Inverted (min: 0, max: 1, increment: 1) Inverted flight. (0=normal, 1=inverted).",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_GRIPPER",
      "value": 211,
      "desc": "Mission command to operate a gripper.",
      "param1": "@param1 Instance (min: 1, increment: 1) Gripper instance number.",
      "param2": "@param2 Action Gripper action to perform.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_AUTOTUNE_ENABLE",
      "value": 212,
      "desc": "Enable/disable autotune.",
      "param1": "@param1 Enable (min: 0, max: 1, increment: 1) Enable (1: enable, 0:disable).",
      "param2": "@param2 Axis Specify which axis are autotuned. 0 indicates autopilot default settings.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "NAV_SET_YAW_SPEED",
      "value": 213,
      "desc": "Sets a desired vehicle turn angle and speed change.",
      "param1": "@param1 Yaw[deg] Yaw angle to adjust steering by.",
      "param2": "@param2 Speed[m/s] Speed.",
      "param3": "@param3 Angle (min: 0, max: 1, increment: 1) Final angle. (0=absolute, 1=relative)",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_CAM_TRIGG_INTERVAL",
      "value": 214,
      "desc": "Mission command to set camera trigger interval for this flight. If triggering is enabled, the camera is triggered each time this interval expires. This command can also be used to set the shutter integration time for the camera.",
      "param1": "@param1 Trigger Cycle[ms] (min: -1, increment: 1) Camera trigger cycle time. -1 or 0 to ignore.",
      "param2": "@param2 Shutter Integration[ms] (min: -1, increment: 1) Camera shutter integration time. Should be less than trigger cycle time. -1 or 0 to ignore.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_MOUNT_CONTROL_QUAT",
      "value": 220,
      "desc": "Mission command to control a camera or antenna mount, using a quaternion as reference.",
      "param1": "@param1 Q1 quaternion param q1, w (1 in null-rotation)",
      "param2": "@param2 Q2 quaternion param q2, x (0 in null-rotation)",
      "param3": "@param3 Q3 quaternion param q3, Y (0 in null-rotation)",
      "param4": "@param4 Q4 quaternion param q4, z (0 in null-rotation)",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_GUIDED_MASTER",
      "value": 221,
      "desc": "Set id of master controller",
      "param1": "@param1 System ID (min: 0, max: 255, increment: 1) System ID",
      "param2": "@param2 Component ID (min: 0, max: 255, increment: 1) Component ID",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_GUIDED_LIMITS",
      "value": 222,
      "desc": "Set limits for external control",
      "param1": "@param1 Timeout[s] (min: 0) Timeout - maximum time that external controller will be allowed to control vehicle. 0 means no timeout.",
      "param2": "@param2 Min Altitude[m] Altitude (MSL) min - if vehicle moves below this alt, the command will be aborted and the mission will continue. 0 means no lower altitude limit.",
      "param3": "@param3 Max Altitude[m] Altitude (MSL) max - if vehicle moves above this alt, the command will be aborted and the mission will continue. 0 means no upper altitude limit.",
      "param4": "@param4 Horiz. Move Limit[m] (min: 0) Horizontal move limit - if vehicle moves more than this distance from its location at the moment the command was executed, the command will be aborted and the mission will continue. 0 means no horizontal move limit.",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_ENGINE_CONTROL",
      "value": 223,
      "desc": "Control vehicle engine. This is interpreted by the vehicles engine controller to change the target engine state. It is intended for vehicles with internal combustion engines",
      "param1": "@param1 Start Engine (min: 0, max: 1, increment: 1) 0: Stop engine, 1:Start Engine",
      "param2": "@param2 Cold Start (min: 0, max: 1, increment: 1) 0: Warm start, 1:Cold start. Controls use of choke where applicable",
      "param3": "@param3 Height Delay[m] (min: 0) Height delay. This is for commanding engine start only after the vehicle has gained the specified height. Used in VTOL vehicles during takeoff to start engine after the aircraft is off the ground. Zero for no delay.",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_SET_MISSION_CURRENT",
      "value": 224,
      "desc": "Set the mission item with sequence number seq as the current item and emit MISSION_CURRENT (whether or not the mission number changed). If a mission is currently being executed, the system will continue to this new mission item on the shortest path, skipping any intermediate mission items. Note that mission jump repeat counters are not reset unless param2 is set (see MAV_CMD_DO_JUMP param2). This command may trigger a mission state-machine change on some systems: for example from MISSION_STATE_NOT_STARTED or MISSION_STATE_PAUSED to MISSION_STATE_ACTIVE. If the system is in mission mode, on those systems this command might therefore start, restart or resume the mission. If the system is not in mission mode this command must not trigger a switch to mission mode. The mission may be \"reset\" using param2. Resetting sets jump counters to initial values (to reset counters without changing the current mission item set the param1 to `-1`). Resetting also explicitly changes a mission state of MISSION_STATE_COMPLETE to MISSION_STATE_PAUSED or MISSION_STATE_ACTIVE, potentially allowing it to resume when it is (next) in a mission mode.The command will ACK with MAV_RESULT_FAILED if the sequence number is out of range (including if there is no mission item).",
      "param1": "@param1 Number (min: -1, increment: 1) Mission sequence value to set. -1 for the current mission item (use to reset mission without changing current mission item).",
      "param2": "@param2 Reset Mission (min: 0, max: 1, increment: 1) Resets mission. 1: true, 0: false. Resets jump counters to initial values and changes mission state \"completed\" to be \"active\" or \"paused\".",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_LAST",
      "value": 240,
      "desc": "NOP - This command is only used to mark the upper limit of the DO commands in the enumeration",
      "param1": "@param1 Empty",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "PREFLIGHT_CALIBRATION",
      "value": 241,
      "desc": "Trigger calibration. This command will be only accepted if in pre-flight mode. Except for Temperature Calibration, only one sensor should be set in a single message and all others should be zero.",
      "param1": "@param1 Gyro Temperature (min: 0, max: 3, increment: 1) 1: gyro calibration, 3: gyro temperature calibration",
      "param2": "@param2 Magnetometer (min: 0, max: 1, increment: 1) 1: magnetometer calibration",
      "param3": "@param3 Ground Pressure (min: 0, max: 1, increment: 1) 1: ground pressure calibration",
      "param4": "@param4 Remote Control (min: 0, max: 1, increment: 1) 1: radio RC calibration, 2: RC trim calibration",
      "param5": "@param5 Accelerometer (min: 0, max: 4, increment: 1) 1: accelerometer calibration, 2: board level calibration, 3: accelerometer temperature calibration, 4: simple accelerometer calibration",
      "param6": "@param6 Compmot or Airspeed (min: 0, max: 2, increment: 1) 1: APM: compass/motor interference calibration (PX4: airspeed calibration, deprecated), 2: airspeed calibration",
      "param7": "@param7 ESC or Baro (min: 0, max: 3, increment: 1) 1: ESC calibration, 3: barometer temperature calibration"
    },
    {
      "name": "PREFLIGHT_SET_SENSOR_OFFSETS",
      "value": 242,
      "desc": "Set sensor offsets. This command will be only accepted if in pre-flight mode.",
      "param1": "@param1 Sensor Type (min: 0, max: 6, increment: 1) Sensor to adjust the offsets for: 0: gyros, 1: accelerometer, 2: magnetometer, 3: barometer, 4: optical flow, 5: second magnetometer, 6: third magnetometer",
      "param2": "@param2 X Offset X axis offset (or generic dimension 1), in the sensor's raw units",
      "param3": "@param3 Y Offset Y axis offset (or generic dimension 2), in the sensor's raw units",
      "param4": "@param4 Z Offset Z axis offset (or generic dimension 3), in the sensor's raw units",
      "param5": "@param5 4th Dimension Generic dimension 4, in the sensor's raw units",
      "param6": "@param6 5th Dimension Generic dimension 5, in the sensor's raw units",
      "param7": "@param7 6th Dimension Generic dimension 6, in the sensor's raw units"
    },
    {
      "name": "PREFLIGHT_UAVCAN",
      "value": 243,
      "desc": "Trigger UAVCAN configuration (actuator ID assignment and direction mapping). Note that this maps to the legacy UAVCAN v0 function UAVCAN_ENUMERATE, which is intended to be executed just once during initial vehicle configuration (it is not a normal pre-flight command and has been poorly named).",
      "param1": "@param1 Actuator ID 1: Trigger actuator ID assignment and direction mapping. 0: Cancel command.",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "PREFLIGHT_UAVCAN",
      "value": 243,
      "desc": "Request storage of different parameter values and logs. This command will be only accepted if in pre-flight mode.",
      "param1": "@param1 Parameter Storage Action to perform on the persistent parameter storage",
      "param2": "@param2 Mission Storage Action to perform on the persistent mission storage",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "PREFLIGHT_STORAGE",
      "value": 245,
      "desc": "Request storage of different parameter values and logs. This command will be only accepted if in pre-flight mode.",
      "param1": "@param1 Parameter Storage Action to perform on the persistent parameter storage",
      "param2": "@param2 Mission Storage Action to perform on the persistent mission storage",
      "param3": "@param3 Logging Rate[Hz] (min: -1, increment: 1) Onboard logging: 0: Ignore, 1: Start default rate logging, -1: Stop logging, > 1: logging rate (e.g. set to 1000 for 1000 Hz logging)",
      "param4": "@param4 Reserved",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "PREFLIGHT_REBOOT_SHUTDOWN",
      "value": 246,
      "desc": "Request the reboot or shutdown of system components.",
      "param1": "@param1 Autopilot (min: 0, max: 3, increment: 1) 0: Do nothing for autopilot, 1: Reboot autopilot, 2: Shutdown autopilot, 3: Reboot autopilot and keep it in the bootloader until upgraded.",
      "param2": "@param2 Companion (min: 0, max: 3, increment: 1) 0: Do nothing for onboard computer, 1: Reboot onboard computer, 2: Shutdown onboard computer, 3: Reboot onboard computer and keep it in the bootloader until upgraded.",
      "param3": "@param3 Component action (min: 0, max: 3, increment: 1) 0: Do nothing for component, 1: Reboot component, 2: Shutdown component, 3: Reboot component and keep it in the bootloader until upgraded",
      "param4": "@param4 Component ID (min: 0, max: 255, increment: 1) MAVLink Component ID targeted in param3 (0 for all components).",
      "param5": "@param5 Reserved (set to 0)",
      "param6": "@param6 Reserved (set to 0)",
      "param7": "@param7 Reserved"
    },
    {
      "name": "OVERRIDE_GOTO",
      "value": 252,
      "desc": "Override current mission with command to pause mission, pause mission and move to position, continue/resume mission. When param 1 indicates that the mission is paused (MAV_GOTO_DO_HOLD), param 2 defines whether it holds in place or moves to another position.",
      "param1": "@param1 Continue MAV_GOTO_DO_HOLD: pause mission and either hold or move to specified position (depending on param2), MAV_GOTO_DO_CONTINUE: resume mission.",
      "param2": "@param2 Position MAV_GOTO_HOLD_AT_CURRENT_POSITION: hold at current position, MAV_GOTO_HOLD_AT_SPECIFIED_POSITION: hold at specified position.",
      "param3": "@param3 Frame Coordinate frame of hold point.",
      "param4": "@param4 Yaw[deg] Desired yaw angle.",
      "param5": "@param5 Latitude/X Latitude/X position.",
      "param6": "@param6 Longitude/Y Longitude/Y position.",
      "param7": "@param7 Altitude/Z Altitude/Z position."
    },
    {
      "name": "OBLIQUE_SURVEY",
      "value": 260,
      "desc": "Mission command to set a Camera Auto Mount Pivoting Oblique Survey (Replaces CAM_TRIGG_DIST for this purpose). The camera is triggered each time this distance is exceeded, then the mount moves to the next position. Params 4~6 set-up the angle limits and number of positions for oblique survey, where mount-enabled vehicles automatically roll the camera between shots to emulate an oblique camera setup (providing an increased HFOV). This command can also be used to set the shutter integration time for the camera.",
      "param1": "@param1 Distance[m] (min: 0) Camera trigger distance. 0 to stop triggering.",
      "param2": "@param2 Shutter[ms] (min: 0, increment: 1) Camera shutter integration time. 0 to ignore",
      "param3": "@param3 Min Interval[ms] (min: 0, max: 10000, increment: 1) The minimum interval in which the camera is capable of taking subsequent pictures repeatedly. 0 to ignore",
      "param4": "@param4 Positions (min: 2, increment: 1) Total number of roll positions at which the camera will capture photos (images captures spread evenly across the limits defined by param5).",
      "param5": "@param5 Roll Angle[deg] (min: 0) Angle limits that the camera can be rolled to left and right of center.",
      "param6": "@param6 Pitch Angle[deg] (min: -180, max: 180) Fixed pitch angle that the camera will hold in oblique mode if the mount is actuated in the pitch axis.",
      "param7": "@param7 Empty"
    },
    {
      "name": "MISSION_START",
      "value": 300,
      "desc": "start running a mission.",
      "param1": "@param1 First Item (min: 0, increment: 1) first_item: the first mission item to run",
      "param2": "@param2 Last Item (min: 0, increment: 1) last_item:  the last mission item to run (after this item is run, the mission ends)",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "ACTUATOR_TEST",
      "value": 310,
      "desc": "Actuator testing command. This is similar to MAV_CMD_DO_MOTOR_TEST but operates on the level of output functions, i.e. it is possible to test Motor1 independent from which output it is configured on. Autopilots typically refuse this command while armed.",
      "param1": "@param1 Value (min: -1, max: 1) Output value: 1 means maximum positive output, 0 to center servos or minimum motor thrust (expected to spin), -1 for maximum negative (if not supported by the motors, i.e. motor is not reversible, smaller than 0 maps to NaN). And NaN maps to disarmed (stop the motors).",
      "param2": "@param2 Timeout[s] (min: 0, max: 3) Timeout after which the test command expires and the output is restored to the previous value. A timeout has to be set for safety reasons. A timeout of 0 means to restore the previous value immediately.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Output Function Actuator Output function",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "CONFIGURE_ACTUATOR",
      "value": 311,
      "desc": "Actuator configuration command.",
      "param1": "@param1 Configuration Actuator configuration action",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Output Function Actuator Output function",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "COMPONENT_ARM_DISARM",
      "value": 400,
      "desc": "Arms / Disarms a component",
      "param1": "@param1 Arm (min: 0, max: 1, increment: 1) 0: disarm, 1: arm",
      "param2": "@param2 Force (min: 0, max: 21196, increment: 21196) 0: arm-disarm unless prevented by safety checks (i.e. when landed), 21196: force arming/disarming (e.g. allow arming to override preflight checks and disarming in flight)",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "RUN_PREARM_CHECKS",
      "value": 401,
      "desc": "Instructs a target system to run pre-arm checks. This allows preflight checks to be run on demand, which may be useful on systems that normally run them at low rate, or which do not trigger checks when the armable state might have changed. This command should return MAV_RESULT_ACCEPTED if it will run the checks. The results of the checks are usually then reported in SYS_STATUS messages (this is system-specific). The command should return MAV_RESULT_TEMPORARILY_REJECTED if the system is already armed.",
      "param1": "@param1 Empty",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "ILLUMINATOR_ON_OFF",
      "value": 405,
      "desc": "Turns illuminators ON/OFF. An illuminator is a light source that is used for lighting up dark areas external to the sytstem: e.g. a torch or searchlight (as opposed to a light source for illuminating the system itself, e.g. an indicator light).",
      "param1": "@param1 Enable (min: 0, max: 1, increment: 1) 0: Illuminators OFF, 1: Illuminators ON",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "GET_HOME_POSITION",
      "value": 410,
      "desc": "Request the home position from the vehicle. The vehicle will ACK the command and then emit the HOME_POSITION message.",
      "param1": "@param1 Reserved",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "INJECT_FAILURE",
      "value": 420,
      "desc": "Inject artificial failure for testing purposes. Note that autopilots should implement an additional protection before accepting this command such as a specific param setting.",
      "param1": "@param1 Failure unit The unit which is affected by the failure.",
      "param2": "@param2 Failure type The type how the failure manifests itself.",
      "param3": "@param3 Instance Instance affected by failure (0 to signal all).",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "START_RX_PAIR",
      "value": 500,
      "desc": "Starts receiver pairing.",
      "param1": "@param1 Spektrum 0:Spektrum.",
      "param2": "@param2 RC Type RC type.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "GET_MESSAGE_INTERVAL",
      "value": 510,
      "desc": "Request the interval between messages for a particular MAVLink message ID. The receiver should ACK the command and then emit its response in a MESSAGE_INTERVAL message.",
      "param1": "@param1 Message ID (min: 0, max: 16777215, increment: 1) The MAVLink message ID",
      "param2": "@param2 RC Type RC type.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "SET_MESSAGE_INTERVAL",
      "value": 511,
      "desc": "Set the interval between messages for a particular MAVLink message ID. This interface replaces REQUEST_DATA_STREAM.",
      "param1": "@param1 Message ID (min: 0, max: 16777215, increment: 1) The MAVLink message ID",
      "param2": "@param2 Interval[us] (min: -1, increment: 1) The interval between two messages. -1: disable. 0: request default rate (which may be zero).",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Response Target (min: 0, max: 2, increment: 1) Target address of message stream (if message has target address fields). 0: Flight-stack default (recommended), 1: address of requestor, 2: broadcast."
    },
    {
      "name": "REQUEST_MESSAGE",
      "value": 512,
      "desc": "Request the target system(s) emit a single instance of a specified message (i.e. a \"one-shot\" version of MAV_CMD_SET_MESSAGE_INTERVAL).",
      "param1": "@param1 Message ID (min: 0, max: 16777215, increment: 1) The MAVLink message ID of the requested message.",
      "param2": "@param2 Req Param 1 Use for index ID, if required. Otherwise, the use of this parameter (if any) must be defined in the requested message. By default assumed not used (0).",
      "param3": "@param3 Req Param 2 The use of this parameter (if any), must be defined in the requested message. By default assumed not used (0).",
      "param4": "@param4 Req Param 3 The use of this parameter (if any), must be defined in the requested message. By default assumed not used (0).",
      "param5": "@param5 Req Param 4 The use of this parameter (if any), must be defined in the requested message. By default assumed not used (0).",
      "param6": "@param6 Req Param 5 The use of this parameter (if any), must be defined in the requested message. By default assumed not used (0).",
      "param7": "@param7 Response Target (min: 0, max: 2, increment: 1) Target address for requested message (if message has target address fields). 0: Flight-stack default, 1: address of requestor, 2: broadcast."
    },
    {
      "name": "REQUEST_PROTOCOL_VERSION",
      "value": 519,
      "desc": "Request MAVLink protocol version compatibility. All receivers should ACK the command and then emit their capabilities in an PROTOCOL_VERSION message",
      "param1": "@param1 Protocol (min: 0, max: 1, increment: 1) 1: Request supported protocol versions by all nodes on the network",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "REQUEST_AUTOPILOT_CAPABILITIES",
      "value": 520,
      "desc": "Request autopilot capabilities. The receiver should ACK the command and then emit its capabilities in an AUTOPILOT_VERSION message",
      "param1": "@param1 Version (min: 0, max: 1, increment: 1) 1: Request autopilot version",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "REQUEST_CAMERA_INFORMATION",
      "value": 521,
      "desc": "Request camera information (CAMERA_INFORMATION).",
      "param1": "@param1 Capabilities (min: 0, max: 1, increment: 1) 0: No action 1: Request camera capabilities",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "REQUEST_CAMERA_SETTINGS",
      "value": 522,
      "desc": "Request camera settings (CAMERA_SETTINGS).",
      "param1": "@param1 Settings (min: 0, max: 1, increment: 1) 0: No Action 1: Request camera settings",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "REQUEST_STORAGE_INFORMATION",
      "value": 525,
      "desc": "Request storage information (STORAGE_INFORMATION). Use the command's target_component to target a specific component's storage.",
      "param1": "@param1 Storage ID (min: 0, increment: 1) Storage ID (0 for all, 1 for first, 2 for second, etc.)",
      "param2": "@param2 Information (min: 0, max: 1, increment: 1) 0: No Action 1: Request storage information",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "STORAGE_FORMAT",
      "value": 526,
      "desc": "Format a storage medium. Once format is complete, a STORAGE_INFORMATION message is sent. Use the command's target_component to target a specific component's storage.",
      "param1": "@param1 Storage ID (min: 0, increment: 1) Storage ID (1 for first, 2 for second, etc.)",
      "param2": "@param2 Format (min: 0, max: 1, increment: 1) Format storage (and reset image log). 0: No action 1: Format storage",
      "param3": "@param3 Reset Image Log (min: 0, max: 1, increment: 1) Reset Image Log (without formatting storage medium). This will reset CAMERA_CAPTURE_STATUS.image_count and CAMERA_IMAGE_CAPTURED.image_index. 0: No action 1: Reset Image Log",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "REQUEST_CAMERA_CAPTURE_STATUS",
      "value": 527,
      "desc": "Request camera capture status (CAMERA_CAPTURE_STATUS)",
      "param1": "@param1 Capture Status (min: 0, max: 1, increment: 1) 0: No Action 1: Request camera capture status",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "REQUEST_FLIGHT_INFORMATION",
      "value": 528,
      "desc": "Request flight information (FLIGHT_INFORMATION)",
      "param1": "@param1 Flight Information (min: 0, max: 1, increment: 1) 1: Request flight information",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "RESET_CAMERA_SETTINGS",
      "value": 529,
      "desc": "Reset all camera settings to Factory Default",
      "param1": "@param1 Reset (min: 0, max: 1, increment: 1) 0: No Action 1: Reset all settings",
      "param2": "@param2 Reserved",
      "param3": "@param3 Reserved",
      "param4": "@param4 Reserved",
      "param5": "@param5 Reserved",
      "param6": "@param6 Reserved",
      "param7": "@param7 Reserved"
    },
    {
      "name": "SET_CAMERA_MODE",
      "value": 530,
      "desc": "Reset all camera settings to Factory Default",
      "param1": "@param1 Reserved (Set to 0)",
      "param2": "@param2 Camera Mode Camera mode",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "SET_CAMERA_ZOOM",
      "value": 531,
      "desc": "Set camera zoom. Camera must respond with a CAMERA_SETTINGS message (on success).",
      "param1": "@param1 Zoom Type Zoom type",
      "param2": "@param2 Zoom Value Zoom value. The range of valid values depend on the zoom type.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "SET_CAMERA_FOCUS",
      "value": 532,
      "desc": "Set camera focus. Camera must respond with a CAMERA_SETTINGS message (on success).",
      "param1": "@param1 Focus Type Focus type",
      "param2": "@param2 Focus Value Focus value",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "SET_STORAGE_USAGE",
      "value": 533,
      "desc": "Set that a particular storage is the preferred location for saving photos, videos, and/or other media (e.g. to set that an SD card is used for storing videos). There can only be one preferred save location for each particular media type: setting a media usage flag will clear/reset that same flag if set on any other storage. If no flag is set the system should use its default storage. A target system can choose to always use default storage, in which case it should ACK the command with MAV_RESULT_UNSUPPORTED. A target system can choose to not allow a particular storage to be set as preferred storage, in which case it should ACK the command with MAV_RESULT_DENIED.",
      "param1": "@param1 Storage ID (min: 0, increment: 1) Storage ID (1 for first, 2 for second, etc.)",
      "param2": "@param2 Usage Usage flags",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "JUMP_TAG",
      "value": 600,
      "desc": "Tagged jump target. Can be jumped to with MAV_CMD_DO_JUMP_TAG.",
      "param1": "@param1 Tag (min: 0, increment: 1) Tag.",
      "param2": "@param2 Empty",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_JUMP_TAG",
      "value": 601,
      "desc": "Jump to the matching tag in the mission list. Repeat this action for the specified number of times. A mission should contain a single matching tag for each jump. If this is not the case then a jump to a missing tag should complete the mission, and a jump where there are multiple matching tags should always select the one with the lowest mission sequence number.",
      "param1": "@param1 Tag (min: 0, increment: 1) Target tag to jump to.",
      "param2": "@param2 Repeat (min: 0, increment: 1) Repeat count.",
      "param3": "@param3 Empty",
      "param4": "@param4 Empty",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Empty"
    },
    {
      "name": "DO_GIMBAL_MANAGER_PITCHYAW",
      "value": 1000,
      "desc": "High level setpoint to be sent to a gimbal manager to set a gimbal attitude. It is possible to set combinations of the values below. E.g. an angle as well as a desired angular rate can be used to get to this angle at a certain angular rate, or an angular rate only will result in continuous turning. NaN is to be used to signal unset. Note: a gimbal is never to react to this command but only the gimbal manager.",
      "param1": "@param1 Pitch angle[deg] (min: -180, max: 180) Pitch angle (positive to pitch up, relative to vehicle for FOLLOW mode, relative to world horizon for LOCK mode).",
      "param2": "@param2 Yaw angle[deg] (min: -180, max: 180) Yaw angle (positive to yaw to the right, relative to vehicle for FOLLOW mode, absolute to North for LOCK mode).",
      "param3": "@param3 Pitch rate[deg/s] Pitch rate (positive to pitch up).",
      "param4": "@param4 Yaw rate[deg/s] Yaw rate (positive to yaw to the right).",
      "param5": "@param5 Gimbal manager flags Gimbal manager flags to use.",
      "param6": "@param5 Gimbal manager flags Gimbal manager flags to use.",
      "param7": "@param7 Gimbal device ID Component ID of gimbal device to address (or 1-6 for non-MAVLink gimbal), 0 for all gimbal device components. Send command multiple times for more than one gimbal (but not all gimbals)."
    },
    {
      "name": "DO_GIMBAL_MANAGER_CONFIGURE",
      "value": 1001,
      "desc": "Gimbal configuration to set which sysid/compid is in primary and secondary control.",
      "param1": "@param1 sysid primary control Sysid for primary control (0: no one in control, -1: leave unchanged, -2: set itself in control (for missions where the own sysid is still unknown), -3: remove control if currently in control).",
      "param2": "@param2 compid primary control Compid for primary control (0: no one in control, -1: leave unchanged, -2: set itself in control (for missions where the own sysid is still unknown), -3: remove control if currently in control).",
      "param3": "@param3 sysid secondary control Sysid for secondary control (0: no one in control, -1: leave unchanged, -2: set itself in control (for missions where the own sysid is still unknown), -3: remove control if currently in control).",
      "param4": "@param4 compid secondary control Compid for secondary control (0: no one in control, -1: leave unchanged, -2: set itself in control (for missions where the own sysid is still unknown), -3: remove control if currently in control).",
      "param5": "@param5 Empty",
      "param6": "@param6 Empty",
      "param7": "@param7 Gimbal device ID Component ID of gimbal device to address (or 1-6 for non-MAVLink gimbal), 0 for all gimbal device components. Send command multiple times for more than one gimbal (but not all gimbals)."
    },
    {

    }

  /**
   * Gimbal configuration to set which sysid/compid is in primary and secondary control.
   *
   *
   *
   *
   *
   *
   */
  'DO_GIMBAL_MANAGER_CONFIGURE' = 1001,
  /**
   * Start image capture sequence. Sends CAMERA_IMAGE_CAPTURED after each capture. Use NaN for reserved
   * values.
   *
   * @param1 Reserved (Set to 0)
   * @param2 Interval[s] (min: 0) Desired elapsed time between two consecutive pictures (in seconds). Minimum values depend on hardware (typically greater than 2 seconds).
   * @param3 Total Images (min: 0, increment: 1) Total number of images to capture. 0 to capture forever/until MAV_CMD_IMAGE_STOP_CAPTURE.
   * @param4 Sequence Number (min: 1, increment: 1) Capture sequence number starting from 1. This is only valid for single-capture (param3 == 1), otherwise set to 0. Increment the capture ID for each capture command to prevent double captures when a command is re-transmitted.
   */
  'IMAGE_START_CAPTURE' = 2000,
  /**
   * Stop image capture sequence Use NaN for reserved values.
   *
   * @param1 Reserved (Set to 0)
   */
  'IMAGE_STOP_CAPTURE' = 2001,
  /**
   * Re-request a CAMERA_IMAGE_CAPTURED message.
   *
   * @param1 Number (min: 0, increment: 1) Sequence number for missing CAMERA_IMAGE_CAPTURED message
   */
  'REQUEST_CAMERA_IMAGE_CAPTURE' = 2002,
  /**
   * Enable or disable on-board camera triggering system.
   *
   * @param1 Enable (min: -1, max: 1, increment: 1) Trigger enable/disable (0 for disable, 1 for start), -1 to ignore
   * @param2 Reset (min: -1, max: 1, increment: 1) 1 to reset the trigger sequence, -1 or 0 to ignore
   * @param3 Pause (min: -1, max: 1, increment: 2) 1 to pause triggering, but without switching the camera off or retracting it. -1 to ignore
   */
  'DO_TRIGGER_CONTROL' = 2003,
  /**
   * If the camera supports point visual tracking (CAMERA_CAP_FLAGS_HAS_TRACKING_POINT is set), this
   * command allows to initiate the tracking.
   *
   * @param1 Point x (min: 0, max: 1) Point to track x value (normalized 0..1, 0 is left, 1 is right).
   * @param2 Point y (min: 0, max: 1) Point to track y value (normalized 0..1, 0 is top, 1 is bottom).
   * @param3 Radius (min: 0, max: 1) Point radius (normalized 0..1, 0 is image left, 1 is image right).
   */
  'CAMERA_TRACK_POINT' = 2004,
  /**
   * If the camera supports rectangle visual tracking (CAMERA_CAP_FLAGS_HAS_TRACKING_RECTANGLE is set),
   * this command allows to initiate the tracking.
   *
   * @param1 Top left corner x (min: 0, max: 1) Top left corner of rectangle x value (normalized 0..1, 0 is left, 1 is right).
   * @param2 Top left corner y (min: 0, max: 1) Top left corner of rectangle y value (normalized 0..1, 0 is top, 1 is bottom).
   * @param3 Bottom right corner x (min: 0, max: 1) Bottom right corner of rectangle x value (normalized 0..1, 0 is left, 1 is right).
   * @param4 Bottom right corner y (min: 0, max: 1) Bottom right corner of rectangle y value (normalized 0..1, 0 is top, 1 is bottom).
   */
  'CAMERA_TRACK_RECTANGLE' = 2005,
  /**
   * Stops ongoing tracking.
   *
   */
  'CAMERA_STOP_TRACKING' = 2010,
  /**
   * Starts video capture (recording).
   *
   * @param1 Stream ID (min: 0, increment: 1) Video Stream ID (0 for all streams)
   * @param2 Status Frequency[Hz] (min: 0) Frequency CAMERA_CAPTURE_STATUS messages should be sent while recording (0 for no messages, otherwise frequency)
   */
  'VIDEO_START_CAPTURE' = 2500,
  /**
   * Stop the current video capture (recording).
   *
   * @param1 Stream ID (min: 0, increment: 1) Video Stream ID (0 for all streams)
   */
  'VIDEO_STOP_CAPTURE' = 2501,
  /**
   * Start video streaming
   *
   * @param1 Stream ID (min: 0, increment: 1) Video Stream ID (0 for all streams, 1 for first, 2 for second, etc.)
   */
  'VIDEO_START_STREAMING' = 2502,
  /**
   * Stop the given video stream
   *
   * @param1 Stream ID (min: 0, increment: 1) Video Stream ID (0 for all streams, 1 for first, 2 for second, etc.)
   */
  'VIDEO_STOP_STREAMING' = 2503,
  /**
   * Request video stream information (VIDEO_STREAM_INFORMATION)
   *
   * @param1 Stream ID (min: 0, increment: 1) Video Stream ID (0 for all streams, 1 for first, 2 for second, etc.)
   */
  'REQUEST_VIDEO_STREAM_INFORMATION' = 2504,
  /**
   * Request video stream status (VIDEO_STREAM_STATUS)
   *
   * @param1 Stream ID (min: 0, increment: 1) Video Stream ID (0 for all streams, 1 for first, 2 for second, etc.)
   */
  'REQUEST_VIDEO_STREAM_STATUS' = 2505,
  /**
   * Request to start streaming logging data over MAVLink (see also LOGGING_DATA message)
   *
   * @param1 Format (min: 0, increment: 1) Format: 0: ULog
   * @param2 Reserved (set to 0)
   * @param3 Reserved (set to 0)
   * @param4 Reserved (set to 0)
   * @param5 Reserved (set to 0)
   * @param6 Reserved (set to 0)
   * @param7 Reserved (set to 0)
   */
  'LOGGING_START' = 2510,
  /**
   * Request to stop streaming log data over MAVLink
   *
   * @param1 Reserved (set to 0)
   * @param2 Reserved (set to 0)
   * @param3 Reserved (set to 0)
   * @param4 Reserved (set to 0)
   * @param5 Reserved (set to 0)
   * @param6 Reserved (set to 0)
   * @param7 Reserved (set to 0)
   */
  'LOGGING_STOP' = 2511,
  /**
   * @param1 Landing Gear ID (min: -1, increment: 1) Landing gear ID (default: 0, -1 for all)
   * @param2 Landing Gear Position Landing gear position (Down: 0, Up: 1, NaN for no change)
   */
  'AIRFRAME_CONFIGURATION' = 2520,
  /**
   * Request to start/stop transmitting over the high latency telemetry
   *
   * @param1 Enable (min: 0, max: 1, increment: 1) Control transmission over high latency telemetry (0: stop, 1: start)
   * @param2 Empty
   * @param3 Empty
   * @param4 Empty
   * @param5 Empty
   * @param6 Empty
   * @param7 Empty
   */
  'CONTROL_HIGH_LATENCY' = 2600,
  /**
   * Create a panorama at the current position
   *
   * @param1 Horizontal Angle[deg] Viewing angle horizontal of the panorama (+- 0.5 the total angle)
   * @param2 Vertical Angle[deg] Viewing angle vertical of panorama.
   * @param3 Horizontal Speed[deg/s] Speed of the horizontal rotation.
   * @param4 Vertical Speed[deg/s] Speed of the vertical rotation.
   */
  'PANORAMA_CREATE' = 2800,
  /**
   * Request VTOL transition
   *
   * @param1 State The target VTOL state. For normal transitions, only MAV_VTOL_STATE_MC and MAV_VTOL_STATE_FW can be used.
   * @param2 Immediate Force immediate transition to the specified MAV_VTOL_STATE. 1: Force immediate, 0: normal transition. Can be used, for example, to trigger an emergency "Quadchute". Caution: Can be dangerous/damage vehicle, depending on autopilot implementation of this command.
   */
  'DO_VTOL_TRANSITION' = 3000,
  /**
   * Request authorization to arm the vehicle to a external entity, the arm authorizer is responsible to
   * request all data that is needs from the vehicle before authorize or deny the request. If approved
   * the progress of command_ack message should be set with period of time that this authorization is
   * valid in seconds or in case it was denied it should be set with one of the reasons in
   * ARM_AUTH_DENIED_REASON.
   *
   * @param1 System ID (min: 0, max: 255, increment: 1) Vehicle system id, this way ground station can request arm authorization on behalf of any vehicle
   */
  'ARM_AUTHORIZATION_REQUEST' = 3001,
  /**
   * This command sets the submode to standard guided when vehicle is in guided mode. The vehicle holds
   * position and altitude and the user can input the desired velocities along all three axes.
   *
   */
  'SET_GUIDED_SUBMODE_STANDARD' = 4000,
  /**
   * This command sets submode circle when vehicle is in guided mode. Vehicle flies along a circle facing
   * the center of the circle. The user can input the velocity along the circle and change the radius. If
   * no input is given the vehicle will hold position.
   *
   * @note has location
   *
   * @param1 Radius[m] Radius of desired circle in CIRCLE_MODE
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude[degE7] Target latitude of center of circle in CIRCLE_MODE
   * @param6 Longitude[degE7] Target longitude of center of circle in CIRCLE_MODE
   */
  'SET_GUIDED_SUBMODE_CIRCLE' = 4001,
  /**
   * Delay mission state machine until gate has been reached.
   *
   * @note has location and is destination
   *
   * @param1 Geometry (min: 0, increment: 1) Geometry: 0: orthogonal to path between previous and next waypoint.
   * @param2 UseAltitude (min: 0, max: 1, increment: 1) Altitude: 0: ignore altitude
   * @param3 Empty
   * @param4 Empty
   * @param5 Latitude Latitude
   * @param6 Longitude Longitude
   * @param7 Altitude[m] Altitude
   */
  'CONDITION_GATE' = 4501,
  /**
   * Fence return point (there can only be one such point in a geofence definition). If rally points are
   * supported they should be used instead.
   *
   * @note has location and is destination
   *
   * @param1 Reserved
   * @param2 Reserved
   * @param3 Reserved
   * @param4 Reserved
   * @param5 Latitude Latitude
   * @param6 Longitude Longitude
   * @param7 Altitude[m] Altitude
   */
  'NAV_FENCE_RETURN_POINT' = 5000,
  /**
   * Fence vertex for an inclusion polygon (the polygon must not be self-intersecting). The vehicle must
   * stay within this area. Minimum of 3 vertices required.
   *
   * @note has location
   *
   * @param1 Vertex Count (min: 3, increment: 1) Polygon vertex count
   * @param2 Inclusion Group (min: 0, increment: 1) Vehicle must be inside ALL inclusion zones in a single group, vehicle must be inside at least one group, must be the same for all points in each polygon
   * @param3 Reserved
   * @param4 Reserved
   * @param5 Latitude Latitude
   * @param6 Longitude Longitude
   * @param7 Reserved
   */
  'NAV_FENCE_POLYGON_VERTEX_INCLUSION' = 5001,
  /**
   * Fence vertex for an exclusion polygon (the polygon must not be self-intersecting). The vehicle must
   * stay outside this area. Minimum of 3 vertices required.
   *
   * @note has location
   *
   * @param1 Vertex Count (min: 3, increment: 1) Polygon vertex count
   * @param2 Reserved
   * @param3 Reserved
   * @param4 Reserved
   * @param5 Latitude Latitude
   * @param6 Longitude Longitude
   * @param7 Reserved
   */
  'NAV_FENCE_POLYGON_VERTEX_EXCLUSION' = 5002,
  /**
   * Circular fence area. The vehicle must stay inside this area.
   *
   * @note has location
   *
   * @param1 Radius[m] Radius.
   * @param2 Inclusion Group (min: 0, increment: 1) Vehicle must be inside ALL inclusion zones in a single group, vehicle must be inside at least one group
   * @param3 Reserved
   * @param4 Reserved
   * @param5 Latitude Latitude
   * @param6 Longitude Longitude
   * @param7 Reserved
   */
  'NAV_FENCE_CIRCLE_INCLUSION' = 5003,
  /**
   * Circular fence area. The vehicle must stay outside this area.
   *
   * @note has location
   *
   * @param1 Radius[m] Radius.
   * @param2 Reserved
   * @param3 Reserved
   * @param4 Reserved
   * @param5 Latitude Latitude
   * @param6 Longitude Longitude
   * @param7 Reserved
   */
  'NAV_FENCE_CIRCLE_EXCLUSION' = 5004,
  /**
   * Rally point. You can have multiple rally points defined.
   *
   * @note has location
   *
   * @param1 Reserved
   * @param2 Reserved
   * @param3 Reserved
   * @param4 Reserved
   * @param5 Latitude Latitude
   * @param6 Longitude Longitude
   * @param7 Altitude[m] Altitude
   */
  'NAV_RALLY_POINT' = 5100,
  /**
   * Commands the vehicle to respond with a sequence of messages UAVCAN_NODE_INFO, one message per every
   * UAVCAN node that is online. Note that some of the response messages can be lost, which the receiver
   * can detect easily by checking whether every received UAVCAN_NODE_STATUS has a matching message
   * UAVCAN_NODE_INFO received earlier; if not, this command should be sent again in order to request
   * re-transmission of the node information messages.
   *
   * @param1 Reserved (set to 0)
   * @param2 Reserved (set to 0)
   * @param3 Reserved (set to 0)
   * @param4 Reserved (set to 0)
   * @param5 Reserved (set to 0)
   * @param6 Reserved (set to 0)
   * @param7 Reserved (set to 0)
   */
  'UAVCAN_GET_NODE_INFO' = 5200,
  /**
   * Trigger the start of an ADSB-out IDENT. This should only be used when requested to do so by an Air
   * Traffic Controller in controlled airspace. This starts the IDENT which is then typically held for 18
   * seconds by the hardware per the Mode A, C, and S transponder spec.
   *
   * @param1 Reserved (set to 0)
   * @param2 Reserved (set to 0)
   * @param3 Reserved (set to 0)
   * @param4 Reserved (set to 0)
   * @param5 Reserved (set to 0)
   * @param6 Reserved (set to 0)
   * @param7 Reserved (set to 0)
   */
  'DO_ADSB_OUT_IDENT' = 10001,
  /**
   * Deploy payload on a Lat / Lon / Alt position. This includes the navigation to reach the required
   * release position and velocity.
   *
   * @note has location and is destination
   *
   * @param1 Operation Mode (min: 0, max: 2, increment: 1) Operation mode. 0: prepare single payload deploy (overwriting previous requests), but do not execute it. 1: execute payload deploy immediately (rejecting further deploy commands during execution, but allowing abort). 2: add payload deploy to existing deployment list.
   * @param2 Approach Vector[deg] (min: -1, max: 360) Desired approach vector in compass heading. A negative value indicates the system can define the approach vector at will.
   * @param3 Ground Speed (min: -1) Desired ground speed at release time. This can be overridden by the airframe in case it needs to meet minimum airspeed. A negative value indicates the system can define the ground speed at will.
   * @param4 Altitude Clearance[m] (min: -1) Minimum altitude clearance to the release position. A negative value indicates the system can define the clearance at will.
   * @param5 Latitude[degE7] Latitude. Note, if used in MISSION_ITEM (deprecated) the units are degrees (unscaled)
   * @param6 Longitude[degE7] Longitude. Note, if used in MISSION_ITEM (deprecated) the units are degrees (unscaled)
   * @param7 Altitude[m] Altitude (MSL)
   */
  'PAYLOAD_PREPARE_DEPLOY' = 30001,
  /**
   * Control the payload deployment.
   *
   * @param1 Operation Mode (min: 0, max: 101, increment: 1) Operation mode. 0: Abort deployment, continue normal mission. 1: switch to payload deployment mode. 100: delete first payload deployment request. 101: delete all payload deployment requests.
   * @param2 Reserved
   * @param3 Reserved
   * @param4 Reserved
   * @param5 Reserved
   * @param6 Reserved
   * @param7 Reserved
   */
  'PAYLOAD_CONTROL_DEPLOY' = 30002,
  /**
   * Magnetometer calibration based on provided known yaw. This allows for fast calibration using WMM
   * field tables in the vehicle, given only the known yaw of the vehicle. If Latitude and longitude are
   * both zero then use the current vehicle location.
   *
   * @note has location
   *
   * @param1 Yaw[deg] Yaw of vehicle in earth frame.
   * @param2 CompassMask CompassMask, 0 for all.
   * @param3 Latitude[deg] Latitude.
   * @param4 Longitude[deg] Longitude.
   * @param5 Empty.
   * @param6 Empty.
   * @param7 Empty.
   */
  'FIXED_MAG_CAL_YAW' = 42006,
  /**
   * Command to operate winch.
   *
   * @param1 Instance (min: 1, increment: 1) Winch instance number.
   * @param2 Action Action to perform.
   * @param3 Length[m] Length of line to release (negative to wind).
   * @param4 Rate[m/s] Release rate (negative to wind).
   * @param5 Empty.
   * @param6 Empty.
   * @param7 Empty.
   */
  'DO_WINCH' = 42600,
  /**
   * User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
   *
   * @note has location and is destination
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'WAYPOINT_USER_1' = 31000,
  /**
   * User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
   *
   * @note has location and is destination
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'WAYPOINT_USER_2' = 31001,
  /**
   * User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
   *
   * @note has location and is destination
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'WAYPOINT_USER_3' = 31002,
  /**
   * User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
   *
   * @note has location and is destination
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'WAYPOINT_USER_4' = 31003,
  /**
   * User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
   *
   * @note has location and is destination
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'WAYPOINT_USER_5' = 31004,
  /**
   * User defined spatial item. Ground Station will not show the Vehicle as flying through this item.
   * Example: ROI item.
   *
   * @note has location
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'SPATIAL_USER_1' = 31005,
  /**
   * User defined spatial item. Ground Station will not show the Vehicle as flying through this item.
   * Example: ROI item.
   *
   * @note has location
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'SPATIAL_USER_2' = 31006,
  /**
   * User defined spatial item. Ground Station will not show the Vehicle as flying through this item.
   * Example: ROI item.
   *
   * @note has location
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'SPATIAL_USER_3' = 31007,
  /**
   * User defined spatial item. Ground Station will not show the Vehicle as flying through this item.
   * Example: ROI item.
   *
   * @note has location
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'SPATIAL_USER_4' = 31008,
  /**
   * User defined spatial item. Ground Station will not show the Vehicle as flying through this item.
   * Example: ROI item.
   *
   * @note has location
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 Latitude Latitude unscaled
   * @param6 Longitude Longitude unscaled
   * @param7 Altitude[m] Altitude (MSL)
   */
  'SPATIAL_USER_5' = 31009,
  /**
   * User defined command. Ground Station will not show the Vehicle as flying through this item. Example:
   * MAV_CMD_DO_SET_PARAMETER item.
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 User defined
   * @param6 User defined
   * @param7 User defined
   */
  'USER_1' = 31010,
  /**
   * User defined command. Ground Station will not show the Vehicle as flying through this item. Example:
   * MAV_CMD_DO_SET_PARAMETER item.
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 User defined
   * @param6 User defined
   * @param7 User defined
   */
  'USER_2' = 31011,
  /**
   * User defined command. Ground Station will not show the Vehicle as flying through this item. Example:
   * MAV_CMD_DO_SET_PARAMETER item.
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 User defined
   * @param6 User defined
   * @param7 User defined
   */
  'USER_3' = 31012,
  /**
   * User defined command. Ground Station will not show the Vehicle as flying through this item. Example:
   * MAV_CMD_DO_SET_PARAMETER item.
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 User defined
   * @param6 User defined
   * @param7 User defined
   */
  'USER_4' = 31013,
  /**
   * User defined command. Ground Station will not show the Vehicle as flying through this item. Example:
   * MAV_CMD_DO_SET_PARAMETER item.
   *
   * @param1 User defined
   * @param2 User defined
   * @param3 User defined
   * @param4 User defined
   * @param5 User defined
   * @param6 User defined
   * @param7 User defined
   */
  'USER_5' = 31014,
  /**
   * Request forwarding of CAN packets from the given CAN bus to this component. CAN Frames are sent
   * using CAN_FRAME and CANFD_FRAME messages
   *
   * @param1 bus Bus number (0 to disable forwarding, 1 for first bus, 2 for 2nd bus, 3 for 3rd bus).
   * @param2 Empty.
   * @param3 Empty.
   * @param4 Empty.
   * @param5 Empty.
   * @param6 Empty.
   * @param7 Empty.
   */
  'CAN_FORWARD' = 32000
}
